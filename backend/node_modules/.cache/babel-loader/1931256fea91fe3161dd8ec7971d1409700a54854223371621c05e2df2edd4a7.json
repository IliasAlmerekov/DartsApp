{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilias.almerekov\\\\Projects\\\\darts\\\\src\\\\components\\\\Podium\\\\Podium.tsx\";\nimport clsx from \"clsx\";\nimport PodiumPlayerCard from \"../PodiumPlayerCard/PodiumPlayerCard\";\nimport './Podium.css';\nimport '../PodiumPlayerCard/PodiumPlayerCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Podium({\n  ...props\n}) {\n  const completedRounds = item.rounds[item.rounds.length];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"podium\",\n    children: props.userMap.map((item, index) => {\n      var _props$list;\n      return /*#__PURE__*/_jsxDEV(PodiumPlayerCard, {\n        className: clsx(\"podiumPlayerCard\", {\n          \"first\": index === 0,\n          \"second\": index === 1,\n          \"third\": index === 2,\n          \"hide\": ((_props$list = props.list) === null || _props$list === void 0 ? void 0 : _props$list.length) === 2 && index === 2\n        }),\n        rounds: item.rounds[item.rounds.length - 1].throw1 === undefined ? item.rounds.length - 1 : item.rounds.length,\n        name: item.name,\n        placement: index + 1 + \".\",\n        averagePerRound: Math.round((301 - item.score) / (item.rounds[item.rounds.length - 1].throw1 === undefined ? item.rounds.length - 1 : item.rounds.length)) === Infinity ? 0 : Math.round((301 - item.score) / (item.rounds[item.rounds.length - 1].throw1 === undefined ? item.rounds.length - 1 : item.rounds.length))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_c = Podium;\nexport default Podium;\nvar _c;\n$RefreshReg$(_c, \"Podium\");","map":{"version":3,"names":["clsx","PodiumPlayerCard","jsxDEV","_jsxDEV","Podium","props","completedRounds","item","rounds","length","className","children","userMap","map","index","_props$list","list","throw1","undefined","name","placement","averagePerRound","Math","round","score","Infinity","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ilias.almerekov/Projects/darts/src/components/Podium/Podium.tsx"],"sourcesContent":["import clsx from \"clsx\";\r\nimport PodiumPlayerCard from \"../PodiumPlayerCard/PodiumPlayerCard\";\r\nimport './Podium.css'\r\nimport '../PodiumPlayerCard/PodiumPlayerCard.css'\r\n\r\ntype Props = {\r\n    name?: string;\r\n    userMap?: any;\r\n    list?: any;\r\n}\r\n\r\n\r\nfunction Podium({ ...props }: Props) {\r\n\r\n    const completedRounds = item.rounds[item.rounds.length]\r\n    return (\r\n        <div className=\"podium\">\r\n            {\r\n                props.userMap.map((item: BASIC.PlayerProps, index: number) => (\r\n                    <PodiumPlayerCard\r\n                        className={clsx(\"podiumPlayerCard\", {\r\n                            \"first\": index === 0,\r\n                            \"second\": index === 1,\r\n                            \"third\": index === 2,\r\n                            \"hide\": props.list?.length === 2 && index === 2\r\n                        })}\r\n                        rounds={item.rounds[item.rounds.length - 1].throw1 === undefined ? item.rounds.length - 1 : item.rounds.length}\r\n                        name={item.name}\r\n                        placement={index + 1 + \".\"}\r\n                        averagePerRound={\r\n                            (Math.round((301 - item.score) / (item.rounds[item.rounds.length - 1].throw1 === undefined ?\r\n                                item.rounds.length - 1 :\r\n                                item.rounds.length))) === Infinity ?\r\n                                0 :\r\n                                Math.round((301 - item.score) / (item.rounds[item.rounds.length - 1].throw1 === undefined ?\r\n                                    item.rounds.length - 1 :\r\n                                    item.rounds.length))}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Podium"],"mappings":";AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,OAAO,cAAc;AACrB,OAAO,0CAA0C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AASjD,SAASC,MAAMA,CAAC;EAAE,GAAGC;AAAa,CAAC,EAAE;EAEjC,MAAMC,eAAe,GAAGC,IAAI,CAACC,MAAM,CAACD,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC;EACvD,oBACIN,OAAA;IAAKO,SAAS,EAAC,QAAQ;IAAAC,QAAA,EAEfN,KAAK,CAACO,OAAO,CAACC,GAAG,CAAC,CAACN,IAAuB,EAAEO,KAAa;MAAA,IAAAC,WAAA;MAAA,oBACrDZ,OAAA,CAACF,gBAAgB;QACbS,SAAS,EAAEV,IAAI,CAAC,kBAAkB,EAAE;UAChC,OAAO,EAAEc,KAAK,KAAK,CAAC;UACpB,QAAQ,EAAEA,KAAK,KAAK,CAAC;UACrB,OAAO,EAAEA,KAAK,KAAK,CAAC;UACpB,MAAM,EAAE,EAAAC,WAAA,GAAAV,KAAK,CAACW,IAAI,cAAAD,WAAA,uBAAVA,WAAA,CAAYN,MAAM,MAAK,CAAC,IAAIK,KAAK,KAAK;QAClD,CAAC,CAAE;QACHN,MAAM,EAAED,IAAI,CAACC,MAAM,CAACD,IAAI,CAACC,MAAM,CAACC,MAAM,GAAG,CAAC,CAAC,CAACQ,MAAM,KAAKC,SAAS,GAAGX,IAAI,CAACC,MAAM,CAACC,MAAM,GAAG,CAAC,GAAGF,IAAI,CAACC,MAAM,CAACC,MAAO;QAC/GU,IAAI,EAAEZ,IAAI,CAACY,IAAK;QAChBC,SAAS,EAAEN,KAAK,GAAG,CAAC,GAAG,GAAI;QAC3BO,eAAe,EACVC,IAAI,CAACC,KAAK,CAAC,CAAC,GAAG,GAAGhB,IAAI,CAACiB,KAAK,KAAKjB,IAAI,CAACC,MAAM,CAACD,IAAI,CAACC,MAAM,CAACC,MAAM,GAAG,CAAC,CAAC,CAACQ,MAAM,KAAKC,SAAS,GACtFX,IAAI,CAACC,MAAM,CAACC,MAAM,GAAG,CAAC,GACtBF,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,CAAC,KAAMgB,QAAQ,GAClC,CAAC,GACDH,IAAI,CAACC,KAAK,CAAC,CAAC,GAAG,GAAGhB,IAAI,CAACiB,KAAK,KAAKjB,IAAI,CAACC,MAAM,CAACD,IAAI,CAACC,MAAM,CAACC,MAAM,GAAG,CAAC,CAAC,CAACQ,MAAM,KAAKC,SAAS,GACrFX,IAAI,CAACC,MAAM,CAACC,MAAM,GAAG,CAAC,GACtBF,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC;MAAE;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd;AAACC,EAAA,GA9BQ1B,MAAM;AA+Bf,eAAeA,MAAM;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}