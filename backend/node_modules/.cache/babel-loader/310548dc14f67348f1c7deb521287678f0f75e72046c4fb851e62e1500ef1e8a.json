{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilias.almerekov\\\\Desktop\\\\Basic\\\\darts\\\\src\\\\components\\\\GamePlayerItem\\\\GamplayerItemList.tsx\";\nimport clsx from \"clsx\";\nimport GamePlayerItem from \"./GamePlayerItem\";\nimport '../GamePlayerItem/GamePlayerItem.css';\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GamePlayerItemList({\n  ...props\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.userMap.map(item => {\n      var _item$rounds, _item$rounds2, _item$rounds3, _item$rounds4, _item$rounds5, _item$rounds6;\n      return /*#__PURE__*/_createElement(GamePlayerItem, {\n        classNameforName: clsx(\"playeritemName\", {\n          \"activePlayerItemName\": item.isActive === true\n        }),\n        className: clsx(\"gamePlayerItem\", {\n          \"activePlayer\": item.isActive === true,\n          \"winner\": item.isPlaying === false\n        }),\n        ...item,\n        key: item.index,\n        name: item.name,\n        isActive: item.isActive,\n        value: item.score,\n        gamePlayerItemThrow1: (_item$rounds = item.rounds[props.round - 1]) === null || _item$rounds === void 0 ? void 0 : _item$rounds.throw1,\n        gamePlayerItemThrow2: (_item$rounds2 = item.rounds[props.round - 1]) === null || _item$rounds2 === void 0 ? void 0 : _item$rounds2.throw2,\n        gamePlayerItemThrow3: (_item$rounds3 = item.rounds[props.round - 1]) === null || _item$rounds3 === void 0 ? void 0 : _item$rounds3.throw3,\n        isBust: item.isBust,\n        throwCount: item.throwCount,\n        isPlaying: item.isPlaying,\n        roundsCount: item.rounds,\n        gamePlayerItemPrevThrow1: (_item$rounds4 = item.rounds[props.round - 2]) === null || _item$rounds4 === void 0 ? void 0 : _item$rounds4.throw1,\n        gamePlayerItemPrevThrow2: (_item$rounds5 = item.rounds[props.round - 2]) === null || _item$rounds5 === void 0 ? void 0 : _item$rounds5.throw2,\n        gamePlayerItemPrevThrow3: (_item$rounds6 = item.rounds[props.round - 2]) === null || _item$rounds6 === void 0 ? void 0 : _item$rounds6.throw3,\n        id: clsx(\"\", {\n          \"playerid\": item.isActive === true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      });\n    })\n  }, void 0, false);\n}\n_c = GamePlayerItemList;\nexport default GamePlayerItemList;\nvar _c;\n$RefreshReg$(_c, \"GamePlayerItemList\");","map":{"version":3,"names":["clsx","GamePlayerItem","createElement","_createElement","Fragment","_Fragment","jsxDEV","_jsxDEV","GamePlayerItemList","props","children","userMap","map","item","_item$rounds","_item$rounds2","_item$rounds3","_item$rounds4","_item$rounds5","_item$rounds6","classNameforName","isActive","className","isPlaying","key","index","name","value","score","gamePlayerItemThrow1","rounds","round","throw1","gamePlayerItemThrow2","throw2","gamePlayerItemThrow3","throw3","isBust","throwCount","roundsCount","gamePlayerItemPrevThrow1","gamePlayerItemPrevThrow2","gamePlayerItemPrevThrow3","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ilias.almerekov/Desktop/Basic/darts/src/components/GamePlayerItem/GamplayerItemList.tsx"],"sourcesContent":["import clsx from \"clsx\";\r\nimport GamePlayerItem from \"./GamePlayerItem\"\r\nimport '../GamePlayerItem/GamePlayerItem.css'\r\n\r\ntype Props = {\r\n    key?: number;\r\n    isActive?: boolean;\r\n    score: number;\r\n    userMap: any;\r\n    gamePlayerItemThrow1?: any;\r\n    gamePlayerItemThrow2?: any;\r\n    gamePlayerItemThrow3?: any;\r\n    round: number\r\n    isBust?: boolean;\r\n    throwCount?: number;\r\n    roundscount?: BASIC.Round\r\n    gamePlayerItemPrevThrow1?: any\r\n    gamePlayerItemPrevThrow2?: any\r\n    gamePlayerItemPrevThrow3?: any\r\n}\r\n\r\nfunction GamePlayerItemList({ ...props }: Props) {\r\n    return (\r\n        <>\r\n            {\r\n                props.userMap.map((item: BASIC.PlayerProps) => (\r\n                    <GamePlayerItem\r\n                        classNameforName={clsx(\"playeritemName\", {\r\n                            \"activePlayerItemName\": item.isActive === true,\r\n                        })}\r\n                        className={clsx(\"gamePlayerItem\", {\r\n                            \"activePlayer\": item.isActive === true,\r\n                            \"winner\": item.isPlaying === false\r\n                        })}\r\n                        {...item}\r\n                        key={item.index}\r\n                        name={item.name}\r\n                        isActive={item.isActive}\r\n                        value={item.score}\r\n                        gamePlayerItemThrow1={item.rounds[props.round - 1]?.throw1}\r\n                        gamePlayerItemThrow2={item.rounds[props.round - 1]?.throw2}\r\n                        gamePlayerItemThrow3={item.rounds[props.round - 1]?.throw3}\r\n                        isBust={item.isBust}\r\n                        throwCount={item.throwCount}\r\n                        isPlaying={item.isPlaying}\r\n                        roundsCount={item.rounds}\r\n                        gamePlayerItemPrevThrow1={item.rounds[props.round - 2]?.throw1}\r\n                        gamePlayerItemPrevThrow2={item.rounds[props.round - 2]?.throw2}\r\n                        gamePlayerItemPrevThrow3={item.rounds[props.round - 2]?.throw3}\r\n                        id={clsx(\"\", {\r\n                            \"playerid\": item.isActive === true\r\n                        })}\r\n                    />\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default GamePlayerItemList"],"mappings":";AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,sCAAsC;AAAA,SAAAC,aAAA,IAAAC,cAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAmB7C,SAASC,kBAAkBA,CAAC;EAAE,GAAGC;AAAa,CAAC,EAAE;EAC7C,oBACIF,OAAA,CAAAF,SAAA;IAAAK,QAAA,EAEQD,KAAK,CAACE,OAAO,CAACC,GAAG,CAAEC,IAAuB;MAAA,IAAAC,YAAA,EAAAC,aAAA,EAAAC,aAAA,EAAAC,aAAA,EAAAC,aAAA,EAAAC,aAAA;MAAA,oBACtChB,cAAA,CAACF,cAAc;QACXmB,gBAAgB,EAAEpB,IAAI,CAAC,gBAAgB,EAAE;UACrC,sBAAsB,EAAEa,IAAI,CAACQ,QAAQ,KAAK;QAC9C,CAAC,CAAE;QACHC,SAAS,EAAEtB,IAAI,CAAC,gBAAgB,EAAE;UAC9B,cAAc,EAAEa,IAAI,CAACQ,QAAQ,KAAK,IAAI;UACtC,QAAQ,EAAER,IAAI,CAACU,SAAS,KAAK;QACjC,CAAC,CAAE;QAAA,GACCV,IAAI;QACRW,GAAG,EAAEX,IAAI,CAACY,KAAM;QAChBC,IAAI,EAAEb,IAAI,CAACa,IAAK;QAChBL,QAAQ,EAAER,IAAI,CAACQ,QAAS;QACxBM,KAAK,EAAEd,IAAI,CAACe,KAAM;QAClBC,oBAAoB,GAAAf,YAAA,GAAED,IAAI,CAACiB,MAAM,CAACrB,KAAK,CAACsB,KAAK,GAAG,CAAC,CAAC,cAAAjB,YAAA,uBAA5BA,YAAA,CAA8BkB,MAAO;QAC3DC,oBAAoB,GAAAlB,aAAA,GAAEF,IAAI,CAACiB,MAAM,CAACrB,KAAK,CAACsB,KAAK,GAAG,CAAC,CAAC,cAAAhB,aAAA,uBAA5BA,aAAA,CAA8BmB,MAAO;QAC3DC,oBAAoB,GAAAnB,aAAA,GAAEH,IAAI,CAACiB,MAAM,CAACrB,KAAK,CAACsB,KAAK,GAAG,CAAC,CAAC,cAAAf,aAAA,uBAA5BA,aAAA,CAA8BoB,MAAO;QAC3DC,MAAM,EAAExB,IAAI,CAACwB,MAAO;QACpBC,UAAU,EAAEzB,IAAI,CAACyB,UAAW;QAC5Bf,SAAS,EAAEV,IAAI,CAACU,SAAU;QAC1BgB,WAAW,EAAE1B,IAAI,CAACiB,MAAO;QACzBU,wBAAwB,GAAAvB,aAAA,GAAEJ,IAAI,CAACiB,MAAM,CAACrB,KAAK,CAACsB,KAAK,GAAG,CAAC,CAAC,cAAAd,aAAA,uBAA5BA,aAAA,CAA8Be,MAAO;QAC/DS,wBAAwB,GAAAvB,aAAA,GAAEL,IAAI,CAACiB,MAAM,CAACrB,KAAK,CAACsB,KAAK,GAAG,CAAC,CAAC,cAAAb,aAAA,uBAA5BA,aAAA,CAA8BgB,MAAO;QAC/DQ,wBAAwB,GAAAvB,aAAA,GAAEN,IAAI,CAACiB,MAAM,CAACrB,KAAK,CAACsB,KAAK,GAAG,CAAC,CAAC,cAAAZ,aAAA,uBAA5BA,aAAA,CAA8BiB,MAAO;QAC/DO,EAAE,EAAE3C,IAAI,CAAC,EAAE,EAAE;UACT,UAAU,EAAEa,IAAI,CAACQ,QAAQ,KAAK;QAClC,CAAC,CAAE;QAAAuB,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CACN,CAAC;IAAA,CACL;EAAC,gBAER,CAAC;AAEX;AAACC,EAAA,GApCQ1C,kBAAkB;AAqC3B,eAAeA,kBAAkB;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}