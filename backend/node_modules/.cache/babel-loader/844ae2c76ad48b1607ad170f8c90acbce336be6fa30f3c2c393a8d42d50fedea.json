{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilias.almerekov\\\\Projects\\\\darts\\\\src\\\\components\\\\Podium\\\\Podium.tsx\";\nimport clsx from \"clsx\";\nimport PodiumPlayerCard from \"../PodiumPlayerCard/PodiumPlayerCard\";\nimport \"./Podium.css\";\nimport \"../PodiumPlayerCard/PodiumPlayerCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Podium({\n  ...props\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"podium\",\n    children: props.userMap.map((item, index) => {\n      var _props$list;\n      const completedRounds = item.rounds[item.rounds.length - 1].throw1 === undefined ? item.rounds.length - 1 : item.rounds.length;\n      const average = completedRounds === 0 ? 0 : Math.round((301 - item.score) / completedRounds);\n      const playerCardClass = clsx(\"podiumplayerCard\", {\n        \"first\": index === 0,\n        \"second\": index === 1,\n        \"third\": index === 2,\n        \"hide\": ((_props$list = props.list) === null || _props$list === void 0 ? void 0 : _props$list.length) === 2 && index === 2\n      });\n      return /*#__PURE__*/_jsxDEV(PodiumPlayerCard, {\n        className: playerCardClass,\n        rounds: completedRounds,\n        name: item.name,\n        placement: `${index + 1}.`,\n        averagePerRound: average\n      }, item.name + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = Podium;\nexport default Podium;\nvar _c;\n$RefreshReg$(_c, \"Podium\");","map":{"version":3,"names":["clsx","PodiumPlayerCard","jsxDEV","_jsxDEV","Podium","props","className","children","userMap","map","item","index","_props$list","completedRounds","rounds","length","throw1","undefined","average","Math","round","score","playerCardClass","list","name","placement","averagePerRound","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ilias.almerekov/Projects/darts/src/components/Podium/Podium.tsx"],"sourcesContent":["import clsx from \"clsx\";\r\nimport PodiumPlayerCard from \"../PodiumPlayerCard/PodiumPlayerCard\";\r\nimport \"./Podium.css\";\r\nimport \"../PodiumPlayerCard/PodiumPlayerCard.css\";\r\n\r\ntype Props = {\r\n  name?: string;\r\n  userMap?: any;\r\n  list?: any;\r\n};\r\n\r\nfunction Podium({ ...props }: Props) {\r\n  return (\r\n    <div className=\"podium\">\r\n      {props.userMap.map((item: BASIC.PlayerProps, index: number) => {\r\n        const completedRounds =\r\n          item.rounds[item.rounds.length - 1].throw1 === undefined\r\n            ? item.rounds.length - 1\r\n            : item.rounds.length;\r\n\r\n        const average =\r\n          completedRounds === 0\r\n            ? 0\r\n            : Math.round((301 - item.score) / completedRounds);\r\n            const playerCardClass = clsx(\"podiumplayerCard\", {\r\n                \"first\": index === 0,\r\n                \"second\": index === 1,\r\n                \"third\": index === 2,\r\n                \"hide\": props.list?.length === 2 && index === 2,\r\n            });\r\n            return (\r\n        <PodiumPlayerCard\r\n        key={item.name + index}\r\n        className={playerCardClass}\r\n        rounds={completedRounds}\r\n        name={item.name}\r\n        placement={`${index + 1}.`}\r\n        averagePerRound={average}\r\n        />\r\n            );\r\n      })\r\n      }\r\n    </div>\r\n  );\r\n}\r\nexport default Podium;\r\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,OAAO,cAAc;AACrB,OAAO,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQlD,SAASC,MAAMA,CAAC;EAAE,GAAGC;AAAa,CAAC,EAAE;EACnC,oBACEF,OAAA;IAAKG,SAAS,EAAC,QAAQ;IAAAC,QAAA,EACpBF,KAAK,CAACG,OAAO,CAACC,GAAG,CAAC,CAACC,IAAuB,EAAEC,KAAa,KAAK;MAAA,IAAAC,WAAA;MAC7D,MAAMC,eAAe,GACnBH,IAAI,CAACI,MAAM,CAACJ,IAAI,CAACI,MAAM,CAACC,MAAM,GAAG,CAAC,CAAC,CAACC,MAAM,KAAKC,SAAS,GACpDP,IAAI,CAACI,MAAM,CAACC,MAAM,GAAG,CAAC,GACtBL,IAAI,CAACI,MAAM,CAACC,MAAM;MAExB,MAAMG,OAAO,GACXL,eAAe,KAAK,CAAC,GACjB,CAAC,GACDM,IAAI,CAACC,KAAK,CAAC,CAAC,GAAG,GAAGV,IAAI,CAACW,KAAK,IAAIR,eAAe,CAAC;MAClD,MAAMS,eAAe,GAAGtB,IAAI,CAAC,kBAAkB,EAAE;QAC7C,OAAO,EAAEW,KAAK,KAAK,CAAC;QACpB,QAAQ,EAAEA,KAAK,KAAK,CAAC;QACrB,OAAO,EAAEA,KAAK,KAAK,CAAC;QACpB,MAAM,EAAE,EAAAC,WAAA,GAAAP,KAAK,CAACkB,IAAI,cAAAX,WAAA,uBAAVA,WAAA,CAAYG,MAAM,MAAK,CAAC,IAAIJ,KAAK,KAAK;MAClD,CAAC,CAAC;MACF,oBACJR,OAAA,CAACF,gBAAgB;QAEjBK,SAAS,EAAEgB,eAAgB;QAC3BR,MAAM,EAAED,eAAgB;QACxBW,IAAI,EAAEd,IAAI,CAACc,IAAK;QAChBC,SAAS,EAAE,GAAGd,KAAK,GAAG,CAAC,GAAI;QAC3Be,eAAe,EAAER;MAAQ,GALpBR,IAAI,CAACc,IAAI,GAAGb,KAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMrB,CAAC;IAEJ,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV;AAACC,EAAA,GAjCQ3B,MAAM;AAkCf,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}