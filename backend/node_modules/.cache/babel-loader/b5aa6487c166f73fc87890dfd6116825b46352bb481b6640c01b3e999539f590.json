{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilias.almerekov\\\\Projects\\\\darts\\\\src\\\\pages\\\\Start\\\\Start.tsx\",\n  _s = $RefreshSig$();\nimport \"./start.css\";\nimport { useEffect, useState, createElement as _createElement } from \"react\";\nimport UnselectedPlayerItem from \"../../components/PlayerItems/UnselectedPlayerItem\";\nimport SelectedPlayerItem from \"../../components/PlayerItems/SelectedPlayerItem\";\nimport Plus from \"../../icons/plus.svg\";\nimport Madebydeepblue from \"../../icons/madeByDeepblue.svg\";\nimport userPLus from \"../../icons/user-plus.svg\";\nimport LinkButton from \"../../components/LinkButton/LinkButton\";\nimport Button from \"../../components/Button/Button\";\nimport \"../../components/Button/Button.css\";\nimport settingsCog from \"../../icons/settings.svg\";\nimport arrowRight from \"../../icons/arrow-right.svg\";\nimport trashIcon from \"../../icons/trash-icon.svg\";\nimport Overlay from \"../../components/Overlay/Overlay\";\nimport DefaultInputField from \"../../components/InputField/DefaultInputField\";\nimport deleteIcon from \"../../icons/delete.svg\";\nimport clsx from \"clsx\";\nimport { DndContext } from \"@dnd-kit/core\";\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from \"@dnd-kit/sortable\";\nimport { restrictToVerticalAxis } from \"@dnd-kit/modifiers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Start({\n  list,\n  setList,\n  userList,\n  addUserToLS,\n  deleteUserFromLS,\n  resetLS,\n  addUnselectedUserListToLs\n}) {\n  _s();\n  const [newPlayer, setNewPlayer] = useState(\"\");\n  const [isOverlayOpen, setIsOverlayOpen] = useState(false);\n  const [isSettingsCogOpen, setIsSettingsCogOpen] = useState(false);\n  const [deletePlayerList, setDeletePlayerList] = useState([]);\n  const [selectedPlayers, setUserSelectedList] = useState([]);\n  const [userUnselectedList, setUserUnselectedList] = useState([]);\n  const [dragEnd, setDragEnd] = useState();\n  const [clickedPlayerId, setClickedPlayerId] = useState(null);\n  const [errormessage, setErrorMessage] = useState(\"\");\n  const SELECT_PLAYER_SOUND_PATH = \"/sounds/select-sound.mp3\";\n  const UNSELECT_PLAYER_SOUND_PATH = \"/sounds/unselect-sound.mp3\";\n  const ADD_PLAYER_SOUND_PATH = \"/sounds/add-player-sound.mp3\";\n  const ERROR_SOUND_PATH = \"/sounds/error-sound.mp3\";\n  function initializePlayerList() {\n    const initialPlayerList = userList.map(user => ({\n      name: user.name,\n      id: user.id,\n      isAdded: false,\n      isClicked: clickedPlayerId\n    }));\n    setUserUnselectedList(initialPlayerList);\n  }\n  function playSound(path) {\n    var audio = new Audio(path);\n    audio.play();\n    audio.volume = 0.4;\n  }\n  function handleSelectPlayer(name, id) {\n    if (userSelectedList.length === 10) return;\n    setClickedPlayerId(id);\n    setTimeout(() => {\n      const updatedUnselectedList = userUnselectedList.filter(list => list.id !== id);\n      const updatedSelectedList = [...userSelectedList, {\n        name,\n        isAdded: true,\n        id\n      }];\n      setUserUnselectedList(updatedUnselectedList);\n      setUserSelectedList(updatedSelectedList);\n      setList(updatedSelectedList);\n      playSound(SELECT_PLAYER_SOUND_PATH);\n    }, 200);\n  }\n  function handleKeyPess(name, event) {\n    if (event.key === \"Enter\") {\n      setNewPlayer(name);\n      createPlayer(newPlayer);\n      playSound(ADD_PLAYER_SOUND_PATH);\n    }\n  }\n  function handleUnselect(name, id) {\n    setClickedPlayerId(null);\n    const newList = userSelectedList.filter(list => list.id !== id);\n    const newUnselectedList = [...userUnselectedList, {\n      name,\n      isAdded: false,\n      id\n    }];\n    setUserSelectedList(newList);\n    setUserUnselectedList(newUnselectedList);\n    setList(newList);\n    playSound(UNSELECT_PLAYER_SOUND_PATH);\n  }\n  function handleDragEnd(event) {\n    const {\n      active,\n      over\n    } = event;\n    setDragEnd(true);\n    if (over && active.id !== (over === null || over === void 0 ? void 0 : over.id)) {\n      const activeIndex = userSelectedList.findIndex(({\n        id\n      }) => id === active.id);\n      const overIndex = userSelectedList.findIndex(({\n        id\n      }) => id === over.id);\n      const newArray = arrayMove(userSelectedList, activeIndex, overIndex);\n      setUserSelectedList(newArray);\n      setList(newArray);\n    }\n  }\n  function createPlayer(name) {\n    if (!/^[^\\s][a-zA-Z0-9 _-]{2,}$/.test(name)) {\n      setErrorMessage(\"Nickname must contain at least 3 letters or digits and cannot start with a space.\");\n      setNewPlayer(\"\");\n      playSound(ERROR_SOUND_PATH);\n      return;\n    }\n    const id = Number(new Date());\n    addUserToLS(name, id);\n    if (userSelectedList.length === 10) {\n      const selectedPlayers = [...userUnselectedList, {\n        name,\n        isAdded: false,\n        id\n      }];\n      setUserUnselectedList(selectedPlayers);\n    } else {\n      const unselectedPlayers = [...userSelectedList, {\n        name,\n        isAdded: true,\n        id\n      }];\n      setUserSelectedList(unselectedPlayers);\n      setList(unselectedPlayers);\n    }\n    setIsOverlayOpen(!isOverlayOpen);\n    setNewPlayer(\"\");\n    setErrorMessage(\"\");\n    playSound(ADD_PLAYER_SOUND_PATH);\n  }\n  function deletePlayer(name, id) {\n    const newList = deletePlayerList.filter(list => list.id !== id);\n    deleteUserFromLS(id);\n    setDeletePlayerList(newList);\n  }\n  function overlayPlayerlist() {\n    const concatPlayerlist = userSelectedList.concat(userUnselectedList);\n    setDeletePlayerList(concatPlayerlist);\n    setIsSettingsCogOpen(!isSettingsCogOpen);\n  }\n  function updateArray() {\n    const newSelectedList = [];\n    const newUnselectedList = [];\n    deletePlayerList.map(player => {\n      return player.isAdded ? newSelectedList.push(player) : newUnselectedList.push(player);\n    });\n    setUserUnselectedList(newUnselectedList);\n    setUserSelectedList(newSelectedList);\n    setIsSettingsCogOpen(!isSettingsCogOpen);\n    resetLS();\n  }\n  useEffect(() => {\n    const handleOverlay = () => {\n      var _overlayBoxEl$clientH, _overlayBottomEl$clie, _deleteOverlayContent, _deleteOverlayContent2;\n      const deleteOverlayContentEl = document.querySelector(\".deleteOverlayContent\");\n      const overlayBottomEl = document.querySelector(\".overlayBottom\");\n      const overlayBoxEl = document.querySelector(\".overlayBox\");\n      if (!deleteOverlayContentEl || !overlayBottomEl || !overlayBoxEl) return;\n      const overlayBoxHeightActual = (_overlayBoxEl$clientH = overlayBoxEl === null || overlayBoxEl === void 0 ? void 0 : overlayBoxEl.clientHeight) !== null && _overlayBoxEl$clientH !== void 0 ? _overlayBoxEl$clientH : 0;\n      const overlayBottomHeight = (_overlayBottomEl$clie = overlayBottomEl.clientHeight) !== null && _overlayBottomEl$clie !== void 0 ? _overlayBottomEl$clie : 0;\n      const innerWindowHeight = overlayBoxHeightActual - overlayBottomHeight;\n      const deleteOverlayContentBottom = (_deleteOverlayContent = (_deleteOverlayContent2 = deleteOverlayContentEl.getBoundingClientRect()) === null || _deleteOverlayContent2 === void 0 ? void 0 : _deleteOverlayContent2.bottom) !== null && _deleteOverlayContent !== void 0 ? _deleteOverlayContent : 0;\n      if (deleteOverlayContentBottom < innerWindowHeight + 60) {\n        overlayBottomEl.classList.remove(\"overlayBottomEnabled\");\n      }\n    };\n    handleOverlay();\n  }, [deletePlayerList.length, isSettingsCogOpen]);\n  useEffect(() => {\n    if (list.length === 0) {\n      initializePlayerList();\n    } else {\n      setUserSelectedList(list);\n      const playersFromLS = localStorage.getItem(\"UserUnselected\");\n      const playersFromLocalStorage = !!playersFromLS && JSON.parse(playersFromLS);\n      setUserUnselectedList(playersFromLocalStorage);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"start\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"existingPlayerList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"headerUnselectedPlayers\",\n          children: [\"Unselected \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 24\n          }, this), \" Players\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: clsx(\"settingsCog\", {\n            hide: userSelectedList.length === 0 && userUnselectedList.length === 0\n          }),\n          src: settingsCog,\n          alt: \"\",\n          onClick: userSelectedList.length === 0 && userUnselectedList.length === 0 ? undefined : () => overlayPlayerlist()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), userUnselectedList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(\"testUserUnselectedList\", {\n          enabled: userSelectedList.length === 10\n        }),\n        children: userUnselectedList.map((player, index) => {\n          return /*#__PURE__*/_createElement(UnselectedPlayerItem, {\n            ...player,\n            key: player.id,\n            handleClickOrDelete: () => {\n              handleSelectPlayer(player.name, player.id);\n            },\n            src: arrowRight,\n            alt: \"Select player arrow\",\n            isClicked: clickedPlayerId === player.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }\n          });\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom\",\n        children: /*#__PURE__*/_jsxDEV(LinkButton, {\n          className: \"createNewPlayerButton h4\",\n          label: \"Create new Player\",\n          icon: Plus,\n          handleClick: () => setIsOverlayOpen(!isOverlayOpen)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addedPlayerList\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"deepblueIcon\",\n        src: Madebydeepblue,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"headerSelectedPlayers\",\n        children: [\"Selected Players\", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listCount\",\n          children: [userSelectedList.length, \"/10\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DndContext, {\n        modifiers: [restrictToVerticalAxis],\n        onDragEnd: handleDragEnd,\n        onDragMove: () => setDragEnd(false),\n        children: /*#__PURE__*/_jsxDEV(SortableContext, {\n          items: userSelectedList,\n          strategy: verticalListSortingStrategy,\n          children: userSelectedList.map((player, index) => /*#__PURE__*/_createElement(SelectedPlayerItem, {\n            ...player,\n            key: index,\n            user: player,\n            handleClick: () => handleUnselect(player.name, player.id),\n            alt: \"Unselect player cross\",\n            dragEnd: dragEnd,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"startBtn\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          isLink: true,\n          label: \"Start\",\n          link: \"/game\",\n          disabled: userSelectedList.length < 2,\n          type: \"secondary\",\n          handleClick: () => {\n            addUnselectedUserListToLs(userUnselectedList);\n            playSound(\"/sounds/start-round-sound.mp3\");\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n      className: \"overlayBox deletePlayerOverlayAdjust\",\n      src: deleteIcon,\n      isOpen: isSettingsCogOpen,\n      onClose: () => setIsSettingsCogOpen(!isSettingsCogOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deletePlayerOverlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"overlayHeading\",\n          children: \"Delete Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deleteOverlayContent\",\n          children: deletePlayerList.map((player, index) => /*#__PURE__*/_createElement(UnselectedPlayerItem, {\n            ...player,\n            key: index,\n            handleClickOrDelete: () => {\n              playSound(\"/sounds/trash-sound.mp3\");\n              deletePlayer(player.name, player.id);\n            },\n            src: trashIcon,\n            alt: \"Delete player trashcan\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlayBottom overlayBottomEnabled\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"deleteOverlayButton\",\n          type: \"primary\",\n          label: \"Done\",\n          handleClick: () => updateArray()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n      className: \"overlayBox\",\n      src: deleteIcon,\n      isOpen: isOverlayOpen,\n      onClose: () => {\n        setIsOverlayOpen(!isOverlayOpen);\n        setNewPlayer(\"\");\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createPlayerOverlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"overlayHeading\",\n          children: \"New Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DefaultInputField, {\n          value: newPlayer,\n          placeholder: \"Playername\",\n          onChange: e => setNewPlayer(e.target.value),\n          onKeyDown: name => e => {\n            var _name$target;\n            return handleKeyPess((_name$target = name.target) === null || _name$target === void 0 ? void 0 : _name$target.value, e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), errormessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-message\",\n          children: errormessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          iconStyling: \"userPlus\",\n          label: \"Player Input\",\n          iconSrc: userPLus,\n          handleClick: () => {\n            createPlayer(newPlayer);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n}\n_s(Start, \"yl6fiNkaizyRD7ellCY0H5ptp6g=\");\n_c = Start;\nexport default Start;\nvar _c;\n$RefreshReg$(_c, \"Start\");","map":{"version":3,"names":["useEffect","useState","createElement","_createElement","UnselectedPlayerItem","SelectedPlayerItem","Plus","Madebydeepblue","userPLus","LinkButton","Button","settingsCog","arrowRight","trashIcon","Overlay","DefaultInputField","deleteIcon","clsx","DndContext","arrayMove","SortableContext","verticalListSortingStrategy","restrictToVerticalAxis","jsxDEV","_jsxDEV","Start","list","setList","userList","addUserToLS","deleteUserFromLS","resetLS","addUnselectedUserListToLs","_s","newPlayer","setNewPlayer","isOverlayOpen","setIsOverlayOpen","isSettingsCogOpen","setIsSettingsCogOpen","deletePlayerList","setDeletePlayerList","selectedPlayers","setUserSelectedList","userUnselectedList","setUserUnselectedList","dragEnd","setDragEnd","clickedPlayerId","setClickedPlayerId","errormessage","setErrorMessage","SELECT_PLAYER_SOUND_PATH","UNSELECT_PLAYER_SOUND_PATH","ADD_PLAYER_SOUND_PATH","ERROR_SOUND_PATH","initializePlayerList","initialPlayerList","map","user","name","id","isAdded","isClicked","playSound","path","audio","Audio","play","volume","handleSelectPlayer","userSelectedList","length","setTimeout","updatedUnselectedList","filter","updatedSelectedList","handleKeyPess","event","key","createPlayer","handleUnselect","newList","newUnselectedList","handleDragEnd","active","over","activeIndex","findIndex","overIndex","newArray","test","Number","Date","unselectedPlayers","deletePlayer","overlayPlayerlist","concatPlayerlist","concat","updateArray","newSelectedList","player","push","handleOverlay","_overlayBoxEl$clientH","_overlayBottomEl$clie","_deleteOverlayContent","_deleteOverlayContent2","deleteOverlayContentEl","document","querySelector","overlayBottomEl","overlayBoxEl","overlayBoxHeightActual","clientHeight","overlayBottomHeight","innerWindowHeight","deleteOverlayContentBottom","getBoundingClientRect","bottom","classList","remove","playersFromLS","localStorage","getItem","playersFromLocalStorage","JSON","parse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","hide","src","alt","onClick","undefined","enabled","index","handleClickOrDelete","__self","__source","label","icon","handleClick","modifiers","onDragEnd","onDragMove","items","strategy","isLink","link","disabled","type","isOpen","onClose","value","placeholder","onChange","e","target","onKeyDown","_name$target","iconStyling","iconSrc","_c","$RefreshReg$"],"sources":["C:/Users/ilias.almerekov/Projects/darts/src/pages/Start/Start.tsx"],"sourcesContent":["import \"./start.css\";\r\nimport { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport UnselectedPlayerItem from \"../../components/PlayerItems/UnselectedPlayerItem\";\r\nimport SelectedPlayerItem from \"../../components/PlayerItems/SelectedPlayerItem\";\r\nimport Plus from \"../../icons/plus.svg\";\r\nimport Madebydeepblue from \"../../icons/madeByDeepblue.svg\";\r\nimport userPLus from \"../../icons/user-plus.svg\";\r\nimport LinkButton from \"../../components/LinkButton/LinkButton\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport \"../../components/Button/Button.css\";\r\nimport settingsCog from \"../../icons/settings.svg\";\r\nimport arrowRight from \"../../icons/arrow-right.svg\";\r\nimport trashIcon from \"../../icons/trash-icon.svg\";\r\nimport Overlay from \"../../components/Overlay/Overlay\";\r\nimport DefaultInputField from \"../../components/InputField/DefaultInputField\";\r\nimport deleteIcon from \"../../icons/delete.svg\";\r\nimport clsx from \"clsx\";\r\nimport { DndContext, DragEndEvent } from \"@dnd-kit/core\";\r\nimport {\r\n  arrayMove,\r\n  SortableContext,\r\n  verticalListSortingStrategy,\r\n} from \"@dnd-kit/sortable\";\r\nimport { restrictToVerticalAxis } from \"@dnd-kit/modifiers\";\r\n\r\nexport type PlayerProps = {\r\n  id: number;\r\n  name: string;\r\n  isAdded: boolean;\r\n  isClicked?: number | null;\r\n};\r\n\r\nexport type IProps = {\r\n  list: PlayerProps[];\r\n  setList: Dispatch<SetStateAction<PlayerProps[]>>;\r\n  userList: BASIC.UserProps[];\r\n  addUserToLS: (name: string, id: number) => void;\r\n  deleteUserFromLS: (id: number) => void;\r\n  resetLS: () => void;\r\n  addUnselectedUserListToLs: (unselectedPlayers: PlayerProps[]) => void;\r\n};\r\n\r\nfunction Start({\r\n  list,\r\n  setList,\r\n  userList,\r\n  addUserToLS,\r\n  deleteUserFromLS,\r\n  resetLS,\r\n  addUnselectedUserListToLs,\r\n}: IProps) {\r\n  const [newPlayer, setNewPlayer] = useState(\"\");\r\n  const [isOverlayOpen, setIsOverlayOpen] = useState(false);\r\n  const [isSettingsCogOpen, setIsSettingsCogOpen] = useState(false);\r\n  const [deletePlayerList, setDeletePlayerList] = useState<PlayerProps[]>([]);\r\n  const [selectedPlayers, setUserSelectedList] = useState<PlayerProps[]>([]);\r\n  const [userUnselectedList, setUserUnselectedList] = useState<PlayerProps[]>(\r\n    []\r\n  );\r\n  const [dragEnd, setDragEnd] = useState<boolean>();\r\n  const [clickedPlayerId, setClickedPlayerId] = useState<number | null>(null);\r\n  const [errormessage, setErrorMessage] = useState(\"\");\r\n  const SELECT_PLAYER_SOUND_PATH = \"/sounds/select-sound.mp3\";\r\n  const UNSELECT_PLAYER_SOUND_PATH = \"/sounds/unselect-sound.mp3\";\r\n  const ADD_PLAYER_SOUND_PATH = \"/sounds/add-player-sound.mp3\";\r\n  const ERROR_SOUND_PATH = \"/sounds/error-sound.mp3\";\r\n\r\n  function initializePlayerList() {\r\n    const initialPlayerList: PlayerProps[] = userList.map(\r\n      (user: BASIC.UserProps) => ({\r\n        name: user.name,\r\n        id: user.id,\r\n        isAdded: false,\r\n        isClicked: clickedPlayerId,\r\n      })\r\n    );\r\n    setUserUnselectedList(initialPlayerList);\r\n  }\r\n\r\n  function playSound(path: string) {\r\n    var audio = new Audio(path);\r\n    audio.play();\r\n    audio.volume = 0.4;\r\n  }\r\n\r\n  function handleSelectPlayer(name: any, id: number) {\r\n    if (userSelectedList.length === 10) return;\r\n    setClickedPlayerId(id);\r\n    setTimeout(() => {\r\n      const updatedUnselectedList = userUnselectedList.filter(\r\n        (list) => list.id !== id\r\n      );\r\n      const updatedSelectedList: PlayerProps[] = [\r\n        ...userSelectedList,\r\n        { name, isAdded: true, id },\r\n      ];\r\n      setUserUnselectedList(updatedUnselectedList);\r\n      setUserSelectedList(updatedSelectedList);\r\n      setList(updatedSelectedList);\r\n      playSound(SELECT_PLAYER_SOUND_PATH);\r\n    }, 200);\r\n  }\r\n\r\n  function handleKeyPess(name: string, event: any) {\r\n    if (event.key === \"Enter\") {\r\n      setNewPlayer(name);\r\n      createPlayer(newPlayer);\r\n      playSound(ADD_PLAYER_SOUND_PATH);\r\n    }\r\n  }\r\n\r\n  function handleUnselect(name: any, id: number) {\r\n    setClickedPlayerId(null);\r\n    const newList = userSelectedList.filter((list) => list.id !== id);\r\n    const newUnselectedList: PlayerProps[] = [\r\n      ...userUnselectedList,\r\n      { name, isAdded: false, id },\r\n    ];\r\n    setUserSelectedList(newList);\r\n    setUserUnselectedList(newUnselectedList);\r\n    setList(newList);\r\n    playSound(UNSELECT_PLAYER_SOUND_PATH);\r\n  }\r\n\r\n  function handleDragEnd(event: DragEndEvent) {\r\n    const { active, over } = event;\r\n    setDragEnd(true);\r\n\r\n    if (over && active.id !== over?.id) {\r\n      const activeIndex = userSelectedList.findIndex(\r\n        ({ id }) => id === active.id\r\n      );\r\n      const overIndex = userSelectedList.findIndex(({ id }) => id === over.id);\r\n      const newArray = arrayMove(userSelectedList, activeIndex, overIndex);\r\n      setUserSelectedList(newArray);\r\n      setList(newArray);\r\n    }\r\n  }\r\n\r\n  function createPlayer(name: string) {\r\n    if (!/^[^\\s][a-zA-Z0-9 _-]{2,}$/.test(name)) {\r\n      setErrorMessage(\r\n        \"Nickname must contain at least 3 letters or digits and cannot start with a space.\"\r\n      );\r\n      setNewPlayer(\"\");\r\n      playSound(ERROR_SOUND_PATH);\r\n      return;\r\n    }\r\n    const id = Number(new Date());\r\n    addUserToLS(name, id);\r\n\r\n    if (userSelectedList.length === 10) {\r\n      const selectedPlayers = [...userUnselectedList, { name, isAdded: false, id }];\r\n      setUserUnselectedList(selectedPlayers);\r\n    } else {\r\n      const unselectedPlayers = [...userSelectedList, { name, isAdded: true, id }];\r\n      setUserSelectedList(unselectedPlayers);\r\n      setList(unselectedPlayers);\r\n    }\r\n    setIsOverlayOpen(!isOverlayOpen);\r\n    setNewPlayer(\"\");\r\n    setErrorMessage(\"\");\r\n    playSound(ADD_PLAYER_SOUND_PATH);\r\n  }\r\n\r\n  function deletePlayer(name: any, id: number) {\r\n    const newList = deletePlayerList.filter((list) => list.id !== id);\r\n    deleteUserFromLS(id);\r\n    setDeletePlayerList(newList);\r\n  }\r\n\r\n  function overlayPlayerlist() {\r\n    const concatPlayerlist = userSelectedList.concat(userUnselectedList);\r\n    setDeletePlayerList(concatPlayerlist);\r\n    setIsSettingsCogOpen(!isSettingsCogOpen);\r\n  }\r\n\r\n  function updateArray() {\r\n    const newSelectedList: PlayerProps[] = [];\r\n    const newUnselectedList: PlayerProps[] = [];\r\n    deletePlayerList.map((player) => {\r\n      return player.isAdded\r\n        ? newSelectedList.push(player)\r\n        : newUnselectedList.push(player);\r\n    });\r\n    setUserUnselectedList(newUnselectedList);\r\n    setUserSelectedList(newSelectedList);\r\n    setIsSettingsCogOpen(!isSettingsCogOpen);\r\n    resetLS();\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleOverlay = () => {\r\n      const deleteOverlayContentEl = document.querySelector(\r\n        \".deleteOverlayContent\"\r\n      );\r\n      const overlayBottomEl = document.querySelector(\".overlayBottom\");\r\n      const overlayBoxEl = document.querySelector(\".overlayBox\");\r\n\r\n      if (!deleteOverlayContentEl || !overlayBottomEl || !overlayBoxEl) return;\r\n\r\n      const overlayBoxHeightActual = overlayBoxEl?.clientHeight ?? 0;\r\n      const overlayBottomHeight = overlayBottomEl.clientHeight ?? 0;\r\n      const innerWindowHeight = overlayBoxHeightActual - overlayBottomHeight;\r\n\r\n      const deleteOverlayContentBottom =\r\n        deleteOverlayContentEl.getBoundingClientRect()?.bottom ?? 0;\r\n\r\n      if (deleteOverlayContentBottom < innerWindowHeight + 60) {\r\n        overlayBottomEl.classList.remove(\"overlayBottomEnabled\");\r\n      }\r\n    };\r\n\r\n    handleOverlay();\r\n  }, [deletePlayerList.length, isSettingsCogOpen]);\r\n\r\n  useEffect(() => {\r\n    if (list.length === 0) {\r\n      initializePlayerList();\r\n    } else {\r\n      setUserSelectedList(list);\r\n      const playersFromLS = localStorage.getItem(\"UserUnselected\");\r\n      const playersFromLocalStorage =\r\n        !!playersFromLS && JSON.parse(playersFromLS);\r\n      setUserUnselectedList(playersFromLocalStorage);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"start\">\r\n      <div className=\"existingPlayerList\">\r\n        <div className=\"header\">\r\n          <h4 className=\"headerUnselectedPlayers\">\r\n            Unselected <br /> Players\r\n          </h4>\r\n          <img\r\n            className={clsx(\"settingsCog\", {\r\n              hide:\r\n                userSelectedList.length === 0 &&\r\n                userUnselectedList.length === 0,\r\n            })}\r\n            src={settingsCog}\r\n            alt=\"\"\r\n            onClick={\r\n              userSelectedList.length === 0 && userUnselectedList.length === 0\r\n                ? undefined\r\n                : () => overlayPlayerlist()\r\n            }\r\n          />\r\n        </div>\r\n\r\n        {userUnselectedList.length > 0 && (\r\n          <div\r\n            className={clsx(\"testUserUnselectedList\", {\r\n              enabled: userSelectedList.length === 10,\r\n            })}\r\n          >\r\n            {userUnselectedList.map((player: PlayerProps, index: number) => {\r\n              return (\r\n                <UnselectedPlayerItem\r\n                  {...player}\r\n                  key={player.id}\r\n                  handleClickOrDelete={() => {\r\n                    handleSelectPlayer(player.name, player.id);\r\n                  }}\r\n                  src={arrowRight}\r\n                  alt=\"Select player arrow\"\r\n                  isClicked={clickedPlayerId === player.id}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"bottom\">\r\n          <LinkButton\r\n            className=\"createNewPlayerButton h4\"\r\n            label=\"Create new Player\"\r\n            icon={Plus}\r\n            handleClick={() => setIsOverlayOpen(!isOverlayOpen)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"addedPlayerList\">\r\n        <img className=\"deepblueIcon\" src={Madebydeepblue} alt=\"\" />\r\n        <h4 className=\"headerSelectedPlayers\">\r\n          Selected Players{\" \"}\r\n          <div className=\"listCount\">{userSelectedList.length}/10</div>\r\n        </h4>\r\n        <DndContext\r\n          modifiers={[restrictToVerticalAxis]}\r\n          onDragEnd={handleDragEnd}\r\n          onDragMove={() => setDragEnd(false)}\r\n        >\r\n          <SortableContext\r\n            items={userSelectedList}\r\n            strategy={verticalListSortingStrategy}\r\n          >\r\n            {userSelectedList.map(\r\n              (player: { name: string; id: number }, index: number) => (\r\n                <SelectedPlayerItem\r\n                  {...player}\r\n                  key={index}\r\n                  user={player}\r\n                  handleClick={() => handleUnselect(player.name, player.id)}\r\n                  alt=\"Unselect player cross\"\r\n                  dragEnd={dragEnd}\r\n                />\r\n              )\r\n            )}\r\n          </SortableContext>\r\n        </DndContext>\r\n        <div className=\"startBtn\">\r\n          <Button\r\n            isLink\r\n            label=\"Start\"\r\n            link=\"/game\"\r\n            disabled={userSelectedList.length < 2}\r\n            type=\"secondary\"\r\n            handleClick={() => {\r\n              addUnselectedUserListToLs(userUnselectedList);\r\n              playSound(\"/sounds/start-round-sound.mp3\");\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Overlay\r\n        className=\"overlayBox deletePlayerOverlayAdjust\"\r\n        src={deleteIcon}\r\n        isOpen={isSettingsCogOpen}\r\n        onClose={() => setIsSettingsCogOpen(!isSettingsCogOpen)}\r\n      >\r\n        <div className=\"deletePlayerOverlay\">\r\n          <p className=\"overlayHeading\">Delete Player</p>\r\n          <div className=\"deleteOverlayContent\">\r\n            {deletePlayerList.map(\r\n              (player: { name: string; id: number }, index: number) => (\r\n                <UnselectedPlayerItem\r\n                  {...player}\r\n                  key={index}\r\n                  handleClickOrDelete={() => {\r\n                    playSound(\"/sounds/trash-sound.mp3\");\r\n                    deletePlayer(player.name, player.id);\r\n                  }}\r\n                  src={trashIcon}\r\n                  alt=\"Delete player trashcan\"\r\n                />\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"overlayBottom overlayBottomEnabled\">\r\n          <Button\r\n            className=\"deleteOverlayButton\"\r\n            type=\"primary\"\r\n            label=\"Done\"\r\n            handleClick={() => updateArray()}\r\n          />\r\n        </div>\r\n      </Overlay>\r\n\r\n      <Overlay\r\n        className=\"overlayBox\"\r\n        src={deleteIcon}\r\n        isOpen={isOverlayOpen}\r\n        onClose={() => {\r\n          setIsOverlayOpen(!isOverlayOpen);\r\n          setNewPlayer(\"\");\r\n        }}\r\n      >\r\n        <div className=\"createPlayerOverlay\">\r\n          <p className=\"overlayHeading\">New Player</p>\r\n          <DefaultInputField\r\n            value={newPlayer}\r\n            placeholder=\"Playername\"\r\n            onChange={(e: any) => setNewPlayer(e.target.value)}\r\n            onKeyDown={(name) => (e) => handleKeyPess(name.target?.value, e)}\r\n          />\r\n          {errormessage && <p id=\"error-message\">{errormessage}</p>}\r\n          <Button\r\n            iconStyling=\"userPlus\"\r\n            label=\"Player Input\"\r\n            iconSrc={userPLus}\r\n            handleClick={() => {\r\n              createPlayer(newPlayer);\r\n            }}\r\n          />\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\nexport default Start;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}