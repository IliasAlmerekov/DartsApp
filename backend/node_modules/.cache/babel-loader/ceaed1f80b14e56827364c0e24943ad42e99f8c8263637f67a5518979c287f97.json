{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilias.almerekov\\\\Projects\\\\darts\\\\src\\\\pages\\\\Start\\\\Start.tsx\",\n  _s = $RefreshSig$();\nimport \"./start.css\";\nimport { useEffect, useState, createElement as _createElement } from \"react\";\nimport UnselectedPlayerItem from \"../../components/PlayerItems/UnselectedPlayerItem\";\nimport SelectedPlayerItem from \"../../components/PlayerItems/SelectedPlayerItem\";\nimport Plus from \"../../icons/plus.svg\";\nimport Madebydeepblue from \"../../icons/madeByDeepblue.svg\";\nimport userPLus from \"../../icons/user-plus.svg\";\nimport LinkButton from \"../../components/LinkButton/LinkButton\";\nimport Button from \"../../components/Button/Button\";\nimport \"../../components/Button/Button.css\";\nimport settingsCog from \"../../icons/settings.svg\";\nimport arrowRight from \"../../icons/arrow-right.svg\";\nimport trashIcon from \"../../icons/trash-icon.svg\";\nimport Overlay from \"../../components/Overlay/Overlay\";\nimport DefaultInputField from \"../../components/InputField/DefaultInputField\";\nimport deleteIcon from \"../../icons/delete.svg\";\nimport clsx from \"clsx\";\nimport { DndContext } from \"@dnd-kit/core\";\nimport { SortableContext, verticalListSortingStrategy } from \"@dnd-kit/sortable\";\nimport { restrictToVerticalAxis } from \"@dnd-kit/modifiers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Start({\n  list,\n  setList,\n  userList,\n  addUserToLS,\n  deleteUserFromLS,\n  resetLS,\n  addUnselectedUserListToLs\n}) {\n  _s();\n  const [newPlayer, setNewPlayer] = useState(\"\");\n  const [isOverlayOpen, setIsOverlayOpen] = useState(false);\n  const [isSettingsCogOpen, setIsSettingsCogOpen] = useState(false);\n  const [deletePlayerList, setDeletePlayerList] = useState([]);\n  const [selectedPlayers, setSelectedPlayers] = useState([]);\n  const [unselectedPlayers, setUnselectedPlayers] = useState([]);\n  const [dragEnd, setDragEnd] = useState();\n  const [clickedPlayerId, setClickedPlayerId] = useState(null);\n  const [errormessage, setErrorMessage] = useState(\"\");\n  const SELECT_PLAYER_SOUND_PATH = \"/sounds/select-sound.mp3\";\n  const UNSELECT_PLAYER_SOUND_PATH = \"/sounds/unselect-sound.mp3\";\n  const ADD_PLAYER_SOUND_PATH = \"/sounds/add-player-sound.mp3\";\n  const ERROR_SOUND_PATH = \"/sounds/error-sound.mp3\";\n  const START_SOUND_PATH = \"/sounds/start-round-sound.mp3\";\n  const TRASH_SOUND_PATH = \"/sounds/trash-sound.mp3\";\n  function initializePlayerList() {\n    const initialPlayerList = userList.map(user => ({\n      name: user.name,\n      id: user.id,\n      isAdded: false,\n      isClicked: clickedPlayerId\n    }));\n    setUnselectedPlayers(initialPlayerList);\n  }\n  function playSound(path) {\n    var audio = new Audio(path);\n    audio.play();\n    audio.volume = 0.4;\n  }\n  function handleSelectPlayer(name, id) {\n    if (selectedPlayers.length === 10) return;\n    setClickedPlayerId(id);\n    setTimeout(() => {\n      const updatedUnselectedPlayerList = unselectedPlayers.filter(list => list.id !== id);\n      const updatedSelectedPlayerList = [...selectedPlayers, {\n        name,\n        isAdded: true,\n        id\n      }];\n      setUnselectedPlayers(updatedUnselectedPlayerList);\n      setSelectedPlayers(updatedSelectedPlayerList);\n      setList(updatedSelectedPlayerList);\n      playSound(SELECT_PLAYER_SOUND_PATH);\n    }, 200);\n  }\n  function handleKeyPess(name, event) {\n    if (event.key === \"Enter\") {\n      setNewPlayer(name);\n      createPlayer(newPlayer);\n    }\n  }\n  function handleUnselect(name, id) {\n    setClickedPlayerId(null);\n    const updatedSelectedPlayers = selectedPlayers.filter(list => list.id !== id);\n    const updatedUnselectedPlayers = [...unselectedPlayers, {\n      name,\n      isAdded: false,\n      id\n    }];\n    setSelectedPlayers(updatedSelectedPlayers);\n    setUnselectedPlayers(updatedUnselectedPlayers);\n    setList(updatedSelectedPlayers);\n    playSound(UNSELECT_PLAYER_SOUND_PATH);\n  }\n\n  // function handleDragEnd(event: DragEndEvent) {\n  //   const { active, over } = event;\n  //   setDragEnd(true);\n\n  //   if (over && active.id !== over?.id) {\n  //     const activeIndex = selectedPlayers.findIndex(\n  //       ({ id }) => id === active.id\n  //     );\n  //     const overIndex = selectedPlayers.findIndex(({ id }) => id === over.id);\n  //     const newArray = arrayMove(selectedPlayers, activeIndex, overIndex);\n  //     setSelectedPlayers(newArray);\n  //     setList(newArray);\n  //   }\n  // }\n\n  function createPlayer(name) {\n    if (!/^[^\\s][a-zA-Z0-9 _-]{2,}$/.test(name)) {\n      setErrorMessage(\"Nickname must contain at least 3 letters or digits and cannot start with a space.\");\n      setNewPlayer(\"\");\n      playSound(ERROR_SOUND_PATH);\n      return;\n    }\n    const id = Number(new Date());\n    addUserToLS(name, id);\n    if (selectedPlayers.length === 10) {\n      const updatedUnselectedPlayers = [...unselectedPlayers, {\n        name,\n        isAdded: false,\n        id\n      }];\n      setUnselectedPlayers(updatedUnselectedPlayers);\n    } else {\n      const updatedSelectedPlayers = [...selectedPlayers, {\n        name,\n        isAdded: true,\n        id\n      }];\n      setSelectedPlayers(updatedSelectedPlayers);\n      setList(updatedSelectedPlayers);\n    }\n    setIsOverlayOpen(!isOverlayOpen);\n    setNewPlayer(\"\");\n    setErrorMessage(\"\");\n    playSound(ADD_PLAYER_SOUND_PATH);\n  }\n  function deletePlayer(name, id) {\n    const updatedPlayerList = deletePlayerList.filter(list => list.id !== id);\n    deleteUserFromLS(id);\n    setDeletePlayerList(updatedPlayerList);\n  }\n  function overlayPlayerlist() {\n    const concatPlayerlist = selectedPlayers.concat(unselectedPlayers);\n    setDeletePlayerList(concatPlayerlist);\n    setIsSettingsCogOpen(!isSettingsCogOpen);\n  }\n  function updateArray() {\n    const newSelectedList = [];\n    const newUnselectedList = [];\n    deletePlayerList.map(player => {\n      return player.isAdded ? newSelectedList.push(player) : newUnselectedList.push(player);\n    });\n    setUnselectedPlayers(newUnselectedList);\n    setSelectedPlayers(newSelectedList);\n    setIsSettingsCogOpen(!isSettingsCogOpen);\n    resetLS();\n  }\n  useEffect(() => {\n    const handleOverlay = () => {\n      var _overlayBoxEl$clientH, _overlayBottomEl$clie, _deleteOverlayContent, _deleteOverlayContent2;\n      const deleteOverlayContentEl = document.querySelector(\".deleteOverlayContent\");\n      const overlayBottomEl = document.querySelector(\".overlayBottom\");\n      const overlayBoxEl = document.querySelector(\".overlayBox\");\n      if (!deleteOverlayContentEl || !overlayBottomEl || !overlayBoxEl) return;\n      const overlayBoxHeightActual = (_overlayBoxEl$clientH = overlayBoxEl === null || overlayBoxEl === void 0 ? void 0 : overlayBoxEl.clientHeight) !== null && _overlayBoxEl$clientH !== void 0 ? _overlayBoxEl$clientH : 0;\n      const overlayBottomHeight = (_overlayBottomEl$clie = overlayBottomEl.clientHeight) !== null && _overlayBottomEl$clie !== void 0 ? _overlayBottomEl$clie : 0;\n      const innerWindowHeight = overlayBoxHeightActual - overlayBottomHeight;\n      const deleteOverlayContentBottom = (_deleteOverlayContent = (_deleteOverlayContent2 = deleteOverlayContentEl.getBoundingClientRect()) === null || _deleteOverlayContent2 === void 0 ? void 0 : _deleteOverlayContent2.bottom) !== null && _deleteOverlayContent !== void 0 ? _deleteOverlayContent : 0;\n      if (deleteOverlayContentBottom < innerWindowHeight + 60) {\n        overlayBottomEl.classList.remove(\"overlayBottomEnabled\");\n      }\n    };\n    handleOverlay();\n  }, [deletePlayerList.length, isSettingsCogOpen]);\n  useEffect(() => {\n    if (list.length === 0) {\n      initializePlayerList();\n    } else {\n      setSelectedPlayers(list);\n      const playersFromLS = localStorage.getItem(\"UserUnselected\");\n      const playersFromLocalStorage = !!playersFromLS && JSON.parse(playersFromLS);\n      setUnselectedPlayers(playersFromLocalStorage);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"start\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"existingPlayerList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"headerUnselectedPlayers\",\n          children: [\"Unselected \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 24\n          }, this), \" Players\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: clsx(\"settingsCog\", {\n            hide: selectedPlayers.length === 0 && unselectedPlayers.length === 0\n          }),\n          src: settingsCog,\n          alt: \"\",\n          onClick: selectedPlayers.length === 0 && unselectedPlayers.length === 0 ? undefined : () => overlayPlayerlist()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), unselectedPlayers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(\"testUserUnselectedList\", {\n          enabled: selectedPlayers.length === 10\n        }),\n        children: unselectedPlayers.map((player, index) => {\n          return /*#__PURE__*/_createElement(UnselectedPlayerItem, {\n            ...player,\n            key: player.id,\n            handleClickOrDelete: () => {\n              handleSelectPlayer(player.name, player.id);\n            },\n            src: arrowRight,\n            alt: \"Select player arrow\",\n            isClicked: clickedPlayerId === player.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }\n          });\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom\",\n        children: /*#__PURE__*/_jsxDEV(LinkButton, {\n          className: \"createNewPlayerButton h4\",\n          label: \"Create new Player\",\n          icon: Plus,\n          handleClick: () => setIsOverlayOpen(!isOverlayOpen)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addedPlayerList\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"deepblueIcon\",\n        src: Madebydeepblue,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"headerSelectedPlayers\",\n        children: [\"Selected Players\", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listCount\",\n          children: [selectedPlayers.length, \"/10\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DndContext, {\n        modifiers: [restrictToVerticalAxis],\n        onDragEnd: handleDragEnd,\n        onDragMove: () => setDragEnd(false),\n        children: /*#__PURE__*/_jsxDEV(SortableContext, {\n          items: selectedPlayers,\n          strategy: verticalListSortingStrategy,\n          children: selectedPlayers.map((player, index) => /*#__PURE__*/_createElement(SelectedPlayerItem, {\n            ...player,\n            key: index,\n            user: player,\n            handleClick: () => handleUnselect(player.name, player.id),\n            alt: \"Unselect player cross\",\n            dragEnd: dragEnd,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"startBtn\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          isLink: true,\n          label: \"Start\",\n          link: \"/game\",\n          disabled: selectedPlayers.length < 2,\n          type: \"secondary\",\n          handleClick: () => {\n            addUnselectedUserListToLs(unselectedPlayers);\n            playSound(START_SOUND_PATH);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n      className: \"overlayBox deletePlayerOverlayAdjust\",\n      src: deleteIcon,\n      isOpen: isSettingsCogOpen,\n      onClose: () => setIsSettingsCogOpen(!isSettingsCogOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deletePlayerOverlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"overlayHeading\",\n          children: \"Delete Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deleteOverlayContent\",\n          children: deletePlayerList.map((player, index) => /*#__PURE__*/_createElement(UnselectedPlayerItem, {\n            ...player,\n            key: index,\n            handleClickOrDelete: () => {\n              playSound(TRASH_SOUND_PATH);\n              deletePlayer(player.name, player.id);\n            },\n            src: trashIcon,\n            alt: \"Delete player trashcan\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlayBottom overlayBottomEnabled\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"deleteOverlayButton\",\n          type: \"primary\",\n          label: \"Done\",\n          handleClick: () => updateArray()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n      className: \"overlayBox\",\n      src: deleteIcon,\n      isOpen: isOverlayOpen,\n      onClose: () => {\n        setIsOverlayOpen(!isOverlayOpen);\n        setNewPlayer(\"\");\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createPlayerOverlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"overlayHeading\",\n          children: \"New Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DefaultInputField, {\n          value: newPlayer,\n          placeholder: \"Playername\",\n          onChange: e => setNewPlayer(e.target.value),\n          onKeyDown: name => e => {\n            var _name$target;\n            return handleKeyPess((_name$target = name.target) === null || _name$target === void 0 ? void 0 : _name$target.value, e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), errormessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-message\",\n          children: errormessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          iconStyling: \"userPlus\",\n          label: \"Player Input\",\n          iconSrc: userPLus,\n          handleClick: () => {\n            createPlayer(newPlayer);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n}\n_s(Start, \"cCd49Fjt6YdP+/TSfrtxr2J1oUY=\");\n_c = Start;\nexport default Start;\nvar _c;\n$RefreshReg$(_c, \"Start\");","map":{"version":3,"names":["useEffect","useState","createElement","_createElement","UnselectedPlayerItem","SelectedPlayerItem","Plus","Madebydeepblue","userPLus","LinkButton","Button","settingsCog","arrowRight","trashIcon","Overlay","DefaultInputField","deleteIcon","clsx","DndContext","SortableContext","verticalListSortingStrategy","restrictToVerticalAxis","jsxDEV","_jsxDEV","Start","list","setList","userList","addUserToLS","deleteUserFromLS","resetLS","addUnselectedUserListToLs","_s","newPlayer","setNewPlayer","isOverlayOpen","setIsOverlayOpen","isSettingsCogOpen","setIsSettingsCogOpen","deletePlayerList","setDeletePlayerList","selectedPlayers","setSelectedPlayers","unselectedPlayers","setUnselectedPlayers","dragEnd","setDragEnd","clickedPlayerId","setClickedPlayerId","errormessage","setErrorMessage","SELECT_PLAYER_SOUND_PATH","UNSELECT_PLAYER_SOUND_PATH","ADD_PLAYER_SOUND_PATH","ERROR_SOUND_PATH","START_SOUND_PATH","TRASH_SOUND_PATH","initializePlayerList","initialPlayerList","map","user","name","id","isAdded","isClicked","playSound","path","audio","Audio","play","volume","handleSelectPlayer","length","setTimeout","updatedUnselectedPlayerList","filter","updatedSelectedPlayerList","handleKeyPess","event","key","createPlayer","handleUnselect","updatedSelectedPlayers","updatedUnselectedPlayers","test","Number","Date","deletePlayer","updatedPlayerList","overlayPlayerlist","concatPlayerlist","concat","updateArray","newSelectedList","newUnselectedList","player","push","handleOverlay","_overlayBoxEl$clientH","_overlayBottomEl$clie","_deleteOverlayContent","_deleteOverlayContent2","deleteOverlayContentEl","document","querySelector","overlayBottomEl","overlayBoxEl","overlayBoxHeightActual","clientHeight","overlayBottomHeight","innerWindowHeight","deleteOverlayContentBottom","getBoundingClientRect","bottom","classList","remove","playersFromLS","localStorage","getItem","playersFromLocalStorage","JSON","parse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","hide","src","alt","onClick","undefined","enabled","index","handleClickOrDelete","__self","__source","label","icon","handleClick","modifiers","onDragEnd","handleDragEnd","onDragMove","items","strategy","isLink","link","disabled","type","isOpen","onClose","value","placeholder","onChange","e","target","onKeyDown","_name$target","iconStyling","iconSrc","_c","$RefreshReg$"],"sources":["C:/Users/ilias.almerekov/Projects/darts/src/pages/Start/Start.tsx"],"sourcesContent":["import \"./start.css\";\r\nimport { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport UnselectedPlayerItem from \"../../components/PlayerItems/UnselectedPlayerItem\";\r\nimport SelectedPlayerItem from \"../../components/PlayerItems/SelectedPlayerItem\";\r\nimport Plus from \"../../icons/plus.svg\";\r\nimport Madebydeepblue from \"../../icons/madeByDeepblue.svg\";\r\nimport userPLus from \"../../icons/user-plus.svg\";\r\nimport LinkButton from \"../../components/LinkButton/LinkButton\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport \"../../components/Button/Button.css\";\r\nimport settingsCog from \"../../icons/settings.svg\";\r\nimport arrowRight from \"../../icons/arrow-right.svg\";\r\nimport trashIcon from \"../../icons/trash-icon.svg\";\r\nimport Overlay from \"../../components/Overlay/Overlay\";\r\nimport DefaultInputField from \"../../components/InputField/DefaultInputField\";\r\nimport deleteIcon from \"../../icons/delete.svg\";\r\nimport clsx from \"clsx\";\r\nimport { DndContext, DragEndEvent } from \"@dnd-kit/core\";\r\nimport {\r\n  arrayMove,\r\n  SortableContext,\r\n  verticalListSortingStrategy,\r\n} from \"@dnd-kit/sortable\";\r\nimport { restrictToVerticalAxis } from \"@dnd-kit/modifiers\";\r\n\r\nexport type PlayerProps = {\r\n  id: number;\r\n  name: string;\r\n  isAdded: boolean;\r\n  isClicked?: number | null;\r\n};\r\n\r\nexport type IProps = {\r\n  list: PlayerProps[];\r\n  setList: Dispatch<SetStateAction<PlayerProps[]>>;\r\n  userList: BASIC.UserProps[];\r\n  addUserToLS: (name: string, id: number) => void;\r\n  deleteUserFromLS: (id: number) => void;\r\n  resetLS: () => void;\r\n  addUnselectedUserListToLs: (unselectedPlayers: PlayerProps[]) => void;\r\n};\r\n\r\nfunction Start({\r\n  list,\r\n  setList,\r\n  userList,\r\n  addUserToLS,\r\n  deleteUserFromLS,\r\n  resetLS,\r\n  addUnselectedUserListToLs,\r\n}: IProps) {\r\n  const [newPlayer, setNewPlayer] = useState(\"\");\r\n  const [isOverlayOpen, setIsOverlayOpen] = useState(false);\r\n  const [isSettingsCogOpen, setIsSettingsCogOpen] = useState(false);\r\n  const [deletePlayerList, setDeletePlayerList] = useState<PlayerProps[]>([]);\r\n  const [selectedPlayers, setSelectedPlayers] = useState<PlayerProps[]>([]);\r\n  const [unselectedPlayers, setUnselectedPlayers] = useState<PlayerProps[]>([]);\r\n  const [dragEnd, setDragEnd] = useState<boolean>();\r\n  const [clickedPlayerId, setClickedPlayerId] = useState<number | null>(null);\r\n  const [errormessage, setErrorMessage] = useState(\"\");\r\n  const SELECT_PLAYER_SOUND_PATH = \"/sounds/select-sound.mp3\";\r\n  const UNSELECT_PLAYER_SOUND_PATH = \"/sounds/unselect-sound.mp3\";\r\n  const ADD_PLAYER_SOUND_PATH = \"/sounds/add-player-sound.mp3\";\r\n  const ERROR_SOUND_PATH = \"/sounds/error-sound.mp3\";\r\n  const START_SOUND_PATH = \"/sounds/start-round-sound.mp3\";\r\n  const TRASH_SOUND_PATH = \"/sounds/trash-sound.mp3\";\r\n\r\n  function initializePlayerList() {\r\n    const initialPlayerList: PlayerProps[] = userList.map(\r\n      (user: BASIC.UserProps) => ({\r\n        name: user.name,\r\n        id: user.id,\r\n        isAdded: false,\r\n        isClicked: clickedPlayerId,\r\n      })\r\n    );\r\n    setUnselectedPlayers(initialPlayerList);\r\n  }\r\n\r\n  function playSound(path: string) {\r\n    var audio = new Audio(path);\r\n    audio.play();\r\n    audio.volume = 0.4;\r\n  }\r\n\r\n  function handleSelectPlayer(name: any, id: number) {\r\n    if (selectedPlayers.length === 10) return;\r\n    setClickedPlayerId(id);\r\n    setTimeout(() => {\r\n      const updatedUnselectedPlayerList = unselectedPlayers.filter(\r\n        (list) => list.id !== id\r\n      );\r\n      const updatedSelectedPlayerList: PlayerProps[] = [\r\n        ...selectedPlayers,\r\n        { name, isAdded: true, id },\r\n      ];\r\n      setUnselectedPlayers(updatedUnselectedPlayerList);\r\n      setSelectedPlayers(updatedSelectedPlayerList);\r\n      setList(updatedSelectedPlayerList);\r\n      playSound(SELECT_PLAYER_SOUND_PATH);\r\n    }, 200);\r\n  }\r\n\r\n  function handleKeyPess(name: string, event: any) {\r\n    if (event.key === \"Enter\") {\r\n      setNewPlayer(name);\r\n      createPlayer(newPlayer);\r\n    }\r\n  }\r\n\r\n  function handleUnselect(name: any, id: number) {\r\n    setClickedPlayerId(null);\r\n    const updatedSelectedPlayers = selectedPlayers.filter(\r\n      (list) => list.id !== id\r\n    );\r\n    const updatedUnselectedPlayers: PlayerProps[] = [\r\n      ...unselectedPlayers,\r\n      { name, isAdded: false, id },\r\n    ];\r\n    setSelectedPlayers(updatedSelectedPlayers);\r\n    setUnselectedPlayers(updatedUnselectedPlayers);\r\n    setList(updatedSelectedPlayers);\r\n    playSound(UNSELECT_PLAYER_SOUND_PATH);\r\n  }\r\n\r\n  // function handleDragEnd(event: DragEndEvent) {\r\n  //   const { active, over } = event;\r\n  //   setDragEnd(true);\r\n\r\n  //   if (over && active.id !== over?.id) {\r\n  //     const activeIndex = selectedPlayers.findIndex(\r\n  //       ({ id }) => id === active.id\r\n  //     );\r\n  //     const overIndex = selectedPlayers.findIndex(({ id }) => id === over.id);\r\n  //     const newArray = arrayMove(selectedPlayers, activeIndex, overIndex);\r\n  //     setSelectedPlayers(newArray);\r\n  //     setList(newArray);\r\n  //   }\r\n  // }\r\n\r\n  function createPlayer(name: string) {\r\n    if (!/^[^\\s][a-zA-Z0-9 _-]{2,}$/.test(name)) {\r\n      setErrorMessage(\r\n        \"Nickname must contain at least 3 letters or digits and cannot start with a space.\"\r\n      );\r\n      setNewPlayer(\"\");\r\n      playSound(ERROR_SOUND_PATH);\r\n      return;\r\n    }\r\n    const id = Number(new Date());\r\n    addUserToLS(name, id);\r\n\r\n    if (selectedPlayers.length === 10) {\r\n      const updatedUnselectedPlayers = [\r\n        ...unselectedPlayers,\r\n        { name, isAdded: false, id },\r\n      ];\r\n      setUnselectedPlayers(updatedUnselectedPlayers);\r\n    } else {\r\n      const updatedSelectedPlayers = [\r\n        ...selectedPlayers,\r\n        { name, isAdded: true, id },\r\n      ];\r\n      setSelectedPlayers(updatedSelectedPlayers);\r\n      setList(updatedSelectedPlayers);\r\n    }\r\n    setIsOverlayOpen(!isOverlayOpen);\r\n    setNewPlayer(\"\");\r\n    setErrorMessage(\"\");\r\n    playSound(ADD_PLAYER_SOUND_PATH);\r\n  }\r\n\r\n  function deletePlayer(name: string, id: number) {\r\n    const updatedPlayerList = deletePlayerList.filter((list) => list.id !== id);\r\n    deleteUserFromLS(id);\r\n    setDeletePlayerList(updatedPlayerList);\r\n  }\r\n\r\n  function overlayPlayerlist() {\r\n    const concatPlayerlist = selectedPlayers.concat(unselectedPlayers);\r\n    setDeletePlayerList(concatPlayerlist);\r\n    setIsSettingsCogOpen(!isSettingsCogOpen);\r\n  }\r\n\r\n  function updateArray() {\r\n    const newSelectedList: PlayerProps[] = [];\r\n    const newUnselectedList: PlayerProps[] = [];\r\n    deletePlayerList.map((player) => {\r\n      return player.isAdded\r\n        ? newSelectedList.push(player)\r\n        : newUnselectedList.push(player);\r\n    });\r\n    setUnselectedPlayers(newUnselectedList);\r\n    setSelectedPlayers(newSelectedList);\r\n    setIsSettingsCogOpen(!isSettingsCogOpen);\r\n    resetLS();\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleOverlay = () => {\r\n      const deleteOverlayContentEl = document.querySelector(\r\n        \".deleteOverlayContent\"\r\n      );\r\n      const overlayBottomEl = document.querySelector(\".overlayBottom\");\r\n      const overlayBoxEl = document.querySelector(\".overlayBox\");\r\n\r\n      if (!deleteOverlayContentEl || !overlayBottomEl || !overlayBoxEl) return;\r\n\r\n      const overlayBoxHeightActual = overlayBoxEl?.clientHeight ?? 0;\r\n      const overlayBottomHeight = overlayBottomEl.clientHeight ?? 0;\r\n      const innerWindowHeight = overlayBoxHeightActual - overlayBottomHeight;\r\n\r\n      const deleteOverlayContentBottom =\r\n        deleteOverlayContentEl.getBoundingClientRect()?.bottom ?? 0;\r\n\r\n      if (deleteOverlayContentBottom < innerWindowHeight + 60) {\r\n        overlayBottomEl.classList.remove(\"overlayBottomEnabled\");\r\n      }\r\n    };\r\n\r\n    handleOverlay();\r\n  }, [deletePlayerList.length, isSettingsCogOpen]);\r\n\r\n  useEffect(() => {\r\n    if (list.length === 0) {\r\n      initializePlayerList();\r\n    } else {\r\n      setSelectedPlayers(list);\r\n      const playersFromLS = localStorage.getItem(\"UserUnselected\");\r\n      const playersFromLocalStorage =\r\n        !!playersFromLS && JSON.parse(playersFromLS);\r\n      setUnselectedPlayers(playersFromLocalStorage);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"start\">\r\n      <div className=\"existingPlayerList\">\r\n        <div className=\"header\">\r\n          <h4 className=\"headerUnselectedPlayers\">\r\n            Unselected <br /> Players\r\n          </h4>\r\n          <img\r\n            className={clsx(\"settingsCog\", {\r\n              hide:\r\n                selectedPlayers.length === 0 && unselectedPlayers.length === 0,\r\n            })}\r\n            src={settingsCog}\r\n            alt=\"\"\r\n            onClick={\r\n              selectedPlayers.length === 0 && unselectedPlayers.length === 0\r\n                ? undefined\r\n                : () => overlayPlayerlist()\r\n            }\r\n          />\r\n        </div>\r\n\r\n        {unselectedPlayers.length > 0 && (\r\n          <div\r\n            className={clsx(\"testUserUnselectedList\", {\r\n              enabled: selectedPlayers.length === 10,\r\n            })}\r\n          >\r\n            {unselectedPlayers.map((player: PlayerProps, index: number) => {\r\n              return (\r\n                <UnselectedPlayerItem\r\n                  {...player}\r\n                  key={player.id}\r\n                  handleClickOrDelete={() => {\r\n                    handleSelectPlayer(player.name, player.id);\r\n                  }}\r\n                  src={arrowRight}\r\n                  alt=\"Select player arrow\"\r\n                  isClicked={clickedPlayerId === player.id}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"bottom\">\r\n          <LinkButton\r\n            className=\"createNewPlayerButton h4\"\r\n            label=\"Create new Player\"\r\n            icon={Plus}\r\n            handleClick={() => setIsOverlayOpen(!isOverlayOpen)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"addedPlayerList\">\r\n        <img className=\"deepblueIcon\" src={Madebydeepblue} alt=\"\" />\r\n        <h4 className=\"headerSelectedPlayers\">\r\n          Selected Players{\" \"}\r\n          <div className=\"listCount\">{selectedPlayers.length}/10</div>\r\n        </h4>\r\n        <DndContext\r\n          modifiers={[restrictToVerticalAxis]}\r\n          onDragEnd={handleDragEnd}\r\n          onDragMove={() => setDragEnd(false)}\r\n        >\r\n          <SortableContext\r\n            items={selectedPlayers}\r\n            strategy={verticalListSortingStrategy}\r\n          >\r\n            {selectedPlayers.map(\r\n              (player: { name: string; id: number }, index: number) => (\r\n                <SelectedPlayerItem\r\n                  {...player}\r\n                  key={index}\r\n                  user={player}\r\n                  handleClick={() => handleUnselect(player.name, player.id)}\r\n                  alt=\"Unselect player cross\"\r\n                  dragEnd={dragEnd}\r\n                />\r\n              )\r\n            )}\r\n          </SortableContext>\r\n        </DndContext>\r\n        <div className=\"startBtn\">\r\n          <Button\r\n            isLink\r\n            label=\"Start\"\r\n            link=\"/game\"\r\n            disabled={selectedPlayers.length < 2}\r\n            type=\"secondary\"\r\n            handleClick={() => {\r\n              addUnselectedUserListToLs(unselectedPlayers);\r\n              playSound(START_SOUND_PATH);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Overlay\r\n        className=\"overlayBox deletePlayerOverlayAdjust\"\r\n        src={deleteIcon}\r\n        isOpen={isSettingsCogOpen}\r\n        onClose={() => setIsSettingsCogOpen(!isSettingsCogOpen)}\r\n      >\r\n        <div className=\"deletePlayerOverlay\">\r\n          <p className=\"overlayHeading\">Delete Player</p>\r\n          <div className=\"deleteOverlayContent\">\r\n            {deletePlayerList.map(\r\n              (player: { name: string; id: number }, index: number) => (\r\n                <UnselectedPlayerItem\r\n                  {...player}\r\n                  key={index}\r\n                  handleClickOrDelete={() => {\r\n                    playSound(TRASH_SOUND_PATH);\r\n                    deletePlayer(player.name, player.id);\r\n                  }}\r\n                  src={trashIcon}\r\n                  alt=\"Delete player trashcan\"\r\n                />\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"overlayBottom overlayBottomEnabled\">\r\n          <Button\r\n            className=\"deleteOverlayButton\"\r\n            type=\"primary\"\r\n            label=\"Done\"\r\n            handleClick={() => updateArray()}\r\n          />\r\n        </div>\r\n      </Overlay>\r\n\r\n      <Overlay\r\n        className=\"overlayBox\"\r\n        src={deleteIcon}\r\n        isOpen={isOverlayOpen}\r\n        onClose={() => {\r\n          setIsOverlayOpen(!isOverlayOpen);\r\n          setNewPlayer(\"\");\r\n        }}\r\n      >\r\n        <div className=\"createPlayerOverlay\">\r\n          <p className=\"overlayHeading\">New Player</p>\r\n          <DefaultInputField\r\n            value={newPlayer}\r\n            placeholder=\"Playername\"\r\n            onChange={(e: any) => setNewPlayer(e.target.value)}\r\n            onKeyDown={(name) => (e) => handleKeyPess(name.target?.value, e)}\r\n          />\r\n          {errormessage && <p id=\"error-message\">{errormessage}</p>}\r\n          <Button\r\n            iconStyling=\"userPlus\"\r\n            label=\"Player Input\"\r\n            iconSrc={userPLus}\r\n            handleClick={() => {\r\n              createPlayer(newPlayer);\r\n            }}\r\n          />\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\nexport default Start;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}